version = "3.5.9"
runner.dialect=scala212
project.git = true

maxColumn = 140

assumeStandardLibraryStripMargin = true

docstrings.style = Asterisk

newlines {
  source=keep
  topLevelStatementBlankLines = [
    {
      blanks
        {
          before = 1
          after = 1
        }
    }
  ]
  beforeTemplateBodyIfBreakInParentCtors = false
  beforeMultiline = fold
  alwaysBeforeElseAfterCurlyIf = false
  beforeCurlyLambdaParams = never
  afterCurlyLambdaParams = squash
  implicitParamListModifierForce = [before]
  avoidForSimpleOverflow = [tooLong,punct,slc] // a compromise. set maxColumn to 120, but do not wrap a line just for these reasons
  avoidInResultType = true
  sometimesBeforeColonInMethodReturnType = false
  selectChains = keep
  inInterpolation = avoid
}

danglingParentheses {
  callSite = false
  defnSite = false
  ctrlSite = true
  tupleSite = true
  exclude = [] // `class`, `trait`, `enum`, `extension`, and `def` are supported
}

align {
  preset = more
  multiline = false
  tokens."+" = [{
    code = ":"
    owners = [{
      regex = "Term\\.Param"
      parents = [ "Ctor\\.Primary" ]
    }]
  }]
  closeParenSite = false
  openParenCallSite = false
  openParenDefnSite = false
  stripMargin = true
}

indent {
  main = 2
  significant = 2
  callSite = 2
  ctrlSite = 2
  defnSite = 2
  ctorSite = 2
  matchSite = null
  caseSite = 4
  extendSite = 4
  withSiteRelativeToExtends = 0
  commaSiteRelativeToExtends = 2
}

spaces {
  inImportCurlyBraces = true
}

optIn {
  annotationNewlines = true
}

rewrite {
  rules = [SortImports, SortModifiers, PreferCurlyFors, Imports]

  trailingCommas.style = multiple

  imports {
    expand = false
    sort = scalastyle
  }
}
